name: CI

on: 
  push:
    paths-ignore:
      - 'doc/**'
      - '*.md'
  
jobs:

  Tests:
    name: Test
    runs-on: ubuntu-latest
    # env:
    #   UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    if: true
    steps:
  
      # Checkout repository (required to test local actions)
      - name: Checkout Mirror
        uses: actions/checkout@v2
        with:
          repository: vis2k/Mirror
          fetch-depth: 0

      - name: Checkout SimpleWebTransport
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: Assets/SimpleWebTransport
   
      - name: Add Coverage Plugin
        uses: canastro/copy-action@0.0.2
        with:
          source: Packages/manifest-coverage.json
          target: Packages/manifest.json

      # - name: Activate license
      #   uses: MirrorNG/unity-runner@2.0.0
      #   with:
      #     entrypoint: /activate.sh
          
      - name: Generate Solution
        uses: MirrorNG/unity-runner@2.0.0
        with:
          # Arguments to pass to unity
          args: -buildTarget StandaloneWindows64 -customBuildName MirrorNG -customBuildPath ./build/StandaloneWindows64 -projectPath . -executeMethod  UnityEditor.SyncVS.SyncSolution -quit
  
      # Configure test runner
      - name: Run editor Tests
        uses: MirrorNG/unity-runner@2.0.0
        with:
          args: -runTests -testPlatform editmode -testResults Tests/editmode-results.xml -enableCodeCoverage -coverageResultsPath Tests -editorTestsCategories SimpleWebTransport

      - name: Run play Tests
        uses: MirrorNG/unity-runner@2.0.0
        with:
          args: -runTests -testPlatform playmode -testResults Tests/playmode-results.xml -enableCodeCoverage -coverageResultsPath Tests -editorTestsCategories SimpleWebTransport
          
      # Upload artifacts
      - name: Archive test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: Test results (editor mode)
          path: Tests

      - name: Publish test results
        uses: MirrorNG/nunit-reporter@v1.0.9
        if: always()
        with:
          path: "Tests/*.xml"
          access-token: ${{ secrets.GITHUB_TOKEN }}
  
      # - name: SonarQube analysis
      #   if: always()
      #   uses: MirrorNG/unity-runner@2.0.0
      #   with:
      #     entrypoint: /sonar-scanner.sh
      #     projectKey: vis2k_Mirror
      #     projectName: Mirror
      #     sonarOrganisation: vis2k
      #     beginArguments: >-
      #         /d:sonar.verbose="true" 
      #         /d:sonar.cs.nunit.reportsPaths=Tests/editmode-results.xml,Tests/playimode-results.xml 
      #         /d:sonar.cs.opencover.reportsPaths=Tests/workspace-opencov/EditMode/TestCoverageResults_0000.xml,Tests/workspace-opencov/PlayMode/TestCoverageResults_0000.xml
      #         /d:sonar.coverage.exclusions=Assets/Mirror/Runtime/Transport/Telepathy/**/*.cs,Assets/Mirror/Runtime/Transport/Websocket/**/*.cs,Assets/Mirror/Cloud/**/*.cs,Assets/Mirror/Examples/**/*.cs,Assets/Mirror/Tests/**/*.cs
      #     # files ignored in code coverage:
      #     # Assets/Mirror/Runtime/Transport/Telepathy/** - has its one test in the Telepathy repo
      #     # Assets/Mirror/Runtime/Transport/Websocket/** - needs tests but should be done in its own repo
      #     # Assets/Mirror/Cloud/** - has its own tests in private cloud repo
      #     # Assets/Mirror/Examples/** - examples dont need test coverage
      #     # Assets/Mirror/Tests/** - tests dont need test coverage
      #   env:
      #     FrameworkPathOverride: /opt/Unity/Editor/Data/MonoBleedingEdge/
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Release:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.100'
  
      - name: Install unity-packer
        run: dotnet tool install -g unity-packer
  
      - name: Package
        run: |
          unity-packer pack SimpleWebTransport.unitypackage source Assets/SimpleWebTransport LICENSE Assets/SimpleWebTransport/LICENSE README.md Assets/SimpleWebTransport/README.md

      - uses: actions/upload-artifact@v1
        with:
          name: SimpleWebTransport.unitypackage
          path: SimpleWebTransport.unitypackage

      - name: Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/changelog
            @semantic-release/git
          branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
